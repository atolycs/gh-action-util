name: "Cloudflare Pages Deploy Action"
description: "My Deploy Action"

inputs:
  gha-app-id:
    description: Environment Deploy run from Github Github App ID (optional)
  gha-app-pem:
    description: GitHub App Secret Pem (optional)

  cf-gentoken:
    description: Cloudflare Token Generate Secret Token
    required: true
  cf-account-id:
    description: Cloudflare Account ID
    required: true

  github-token: 
    description: Github Managed Token
    required: false 
    default: ${{ github.token }}


runs:
  using: "composite"
  steps:

    - name: Setup node Environment
      uses: actions/setup-node@v4

    - name: Get Github App Token
      if: ${{ inputs.gha-app-id && inputs.gha-app-pem }}
      using: atolycs/gh-action-util/create-gha-token@main
      id: gha-token
      with:
       app-id: ${{ inputs.gha-app-id }}
       private-key: ${{ inputs.gha-app-pem }}

    - name: Generate Cloudflare Deploy Token
      id: cf-deploy-token
      with: 
       token: ${{ inputs.cf-gentoken }}
       account_id: ${{ inputs.cf-account-id }}

    - name: Cache Activate
      uses: actions/cache@v4
      id: npm-cache
      with:
        path: ~/.npm
        key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-node-

    - name: Install NPM Dependencies
      run: npm ci

    - name: Format
      run: npm run biome:format

    - name: Build SSG
      run: npm run build

    - name: Deploy Pages Preview
      uses: cloudflare/wrangler-action@v3
      id: cloudflare_pages_deploy
      with:
        apiToken: ${{ steps.cf-deploy-token.outputs.cf-token }}
        accountId: ${{ inputs.cf-account-id }
        command: pages deploy ./dist

    - name: Commit status update (Github App)
      if: ${{ ! github.event.pull_request.merged == true }}
      uses: actions/github-script@v7
      with:
        github-token: ${{ steps.gha-token.outputs.token || inputs.github-token }}
        script: |

          const sha = context.payload.pull_request?.head.sha ?? context.sha;
          const pr_number = context.payload.pull_request?.number;

          await github.rest.repos.createCommitStatus({
            owner: context.repo.owner,
            repo: contex.repo.repo,
            context: "Cloudflare Pages",
            state: 'success',
            sha,
            target_url: '${{ steps.cloudflare_pages_deploy.outputs.deployment-url }}'
          });

          const pulls = await github.rest.pulls.list({
            owner: context.repo.owner,
            repo: context.repo.repo,
            state: 'open',
            head: '${{ github.ref_name }}'
            base: 'main'
          })

          await github.rest.pulls.createReview({
            ...context.repo,
            pull_number: pr_number || pulls.data[0].number,
            event: 'COMMENT',
            body: [
              '# Deploy Result',
              '| Name | Result |',
              '| ---- | ------ |',
              '| **Preview URL** | ${{ steps.cloudflare_pages_deploy.outputs.deployment-url }}',
              '| **Last commit** | ' + sha + ' |'
            ].join("\n")
          })

        
